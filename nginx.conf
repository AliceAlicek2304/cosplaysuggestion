events {
    worker_connections 1024;
}

http {
        upstream backend {
    server cosplay-backend:8080;
}

#     server {
#         listen 80;
#         server_name _;

#         # Redirect HTTP to HTTPS
#         return 301 https://$server_name$request_uri;
#     }

#     server {
#     listen 443 ssl;
#     server_name _;

#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;

#     location /api/ {
#         proxy_pass http://backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # CORS headers
#         add_header 'Access-Control-Allow-Origin' "https://main.d3gxp9k6k5djri.amplifyapp.com" always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, User-Agent' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;

#         # Handle preflight OPTIONS
#         if ($request_method = OPTIONS) {
#             add_header 'Access-Control-Allow-Origin' "https://main.d3gxp9k6k5djri.amplifyapp.com" always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, User-Agent' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Content-Length' 0;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             return 204;
#         }
#     }
# }

server {
    listen 80;
    server_name _;

    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;


    }
}
}
